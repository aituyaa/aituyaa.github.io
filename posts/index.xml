<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Virgo</title>
    <link>https://loveminimal.github.io/posts/</link>
    <description>Recent content in Posts on Virgo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 18 Apr 2023 11:36:18 +0800</lastBuildDate><atom:link href="https://loveminimal.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Emacs Lisp</title>
      <link>https://loveminimal.github.io/posts/elisp/</link>
      <pubDate>Tue, 18 Apr 2023 11:36:18 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/elisp/</guid>
      <description>&lt;p&gt;📕 转载自 &lt;a href=&#34;http://smacs.github.io/elisp/&#34;&gt;Emacs Lisp 简明教程 - 水木社区 Emacs 版&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是 叶文彬（水木 ID: happierbee) 写的一份 Emacs Lisp 的教程，深入浅出，非常适合初学者。文档的 TeX 代码及 PDF 文档可在* &lt;a href=&#34;http://www.newsmth.net/nForum/article/Emacs/58338?s=58338&#34;&gt;此处下载&lt;/a&gt;* 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;emacs 的高手不能不会 elisp。但是对于很多人来说 elisp 学习是一个痛苦的历程，至少我是有这样一段经历。因此，我写了这一系列文章，希望能为后来者提供一点捷径。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一款 Typora 主题</title>
      <link>https://loveminimal.github.io/posts/about-typora-theme-virgo/</link>
      <pubDate>Tue, 04 Apr 2023 16:27:00 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/about-typora-theme-virgo/</guid>
      <description>&lt;p&gt;为什么会制作这款 Typora 的主题呢？&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://theme.typora.io/theme/Virgo/&#34;&gt;📙 Virgo&lt;/a&gt; , 仓库地址 &lt;a href=&#34;https://github.com/loveminimal/typora-theme-virgo&#34;&gt;loveminimal/typora-theme-virgo: A typora theme for relative hugo.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>前端浅谈</title>
      <link>https://loveminimal.github.io/posts/web-front-end/</link>
      <pubDate>Tue, 28 Mar 2023 09:22:10 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/web-front-end/</guid>
      <description>&lt;p&gt;本文不涉及具体的细节，浅谈一下 Web 前端的 1 2 3 ……&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>我是怎么写博客的</title>
      <link>https://loveminimal.github.io/posts/how-do-i-blog/</link>
      <pubDate>Mon, 06 Mar 2023 09:40:02 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/how-do-i-blog/</guid>
      <description>&lt;p&gt;在 &lt;a href=&#34;../a-theme-making-journey&#34;&gt;《一场“疲惫”的主题制作之旅》&lt;/a&gt; 中，已经有了不少博客相关的碎碎念。这里，主要用来浅谈一下当前站点博客系统的 &lt;em&gt;=搭建、编辑及部署&lt;/em&gt; 相关的系列流程。&lt;/p&gt;
&lt;img alt=&#34;picture 1&#34; src=&#34;https://loveminimal.github.io/posts/how-do-i-blog/imgs/1aa09c580e674b09e82c722a3689d280012f2ae6e1700e924deeef558347d91a.png&#34; width=&#34;300&#34; /&gt;  
&lt;p&gt;当前站点，使用 &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo 静态博客生成系统&lt;/a&gt; 驱动，部署在个人服务器上。事实上，你可以把生成的站点项目部署在任何可以被访问的地方（比如 &lt;code&gt;Github Page&lt;/code&gt;），它本质上是一个包含了若干 &lt;code&gt;.html&lt;/code&gt; 文件及相关静态资源的文件夹。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emojing</title>
      <link>https://loveminimal.github.io/posts/emojing/</link>
      <pubDate>Tue, 15 Nov 2022 17:16:49 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/emojing/</guid>
      <description>&lt;p&gt;Emoji（えもじ 绘文字），就是表情符号，来自日语词汇“絵文字”（假名为“えもじ”，读音即 emoji）。最早是由栗穰崇于 1999 年创作，并在日本网络及手机用户中流行。自苹果公司发布的 ios5 输入法中加入 emoji 后，这种表情符号开始席卷全球，现已被大多数计算机系统所兼容的 Unicode 编码采纳，得以普遍运用。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/loveminimal/emojing&#34;&gt;💡 loveminimal/emojing: Emojing - GitHub&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何维护更新日志</title>
      <link>https://loveminimal.github.io/posts/keep-changelog/</link>
      <pubDate>Wed, 02 Nov 2022 15:42:33 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/keep-changelog/</guid>
      <description>&lt;img alt=&#34;picture 14&#34; src=&#34;https://loveminimal.github.io/posts/keep-changelog/imgs/de78a20f0efae9c4f2c0432200dfe721f1007dc1c9af179b9c33d842f20d1e7b.png&#34; width=&#34;300&#34; /&gt;  
&lt;p&gt;🔔 本文摘录自 &lt;a href=&#34;https://keepachangelog.com/zh-CN/1.0.0/&#34;&gt;如何维护更新日志 &amp;ndash; 更新日志绝对不应该是 git 日志的堆砌物&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>语义化版本</title>
      <link>https://loveminimal.github.io/posts/semantic-versioning/</link>
      <pubDate>Wed, 02 Nov 2022 14:25:16 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/semantic-versioning/</guid>
      <description>&lt;img alt=&#34;picture 10&#34; src=&#34;https://loveminimal.github.io/posts/semantic-versioning/imgs/f9ff34a8e93cc860f20282e5587cafd221ef73f0d25b926452bec4b7d1dfcb96.png&#34; width=&#34;300&#34; /&gt;  
&lt;p&gt;i.e.Semantic Versioning&lt;/p&gt;
&lt;p&gt;🔔 本文摘录自 &lt;a href=&#34;https://semver.org/lang/zh-CN/&#34;&gt;语义化版本 2.0.0 | Semantic Versioning - semver.org&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;= Emm&amp;hellip; 直接借用文章中的一段话 &amp;ndash; 为供他人使用的软件编写适当的文档，是你作为一名专业开发者应尽的职责。*&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>再谈“个人管理”</title>
      <link>https://loveminimal.github.io/posts/personal-management/</link>
      <pubDate>Mon, 17 Oct 2022 10:43:00 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/personal-management/</guid>
      <description>&lt;p&gt;在 &lt;a href=&#34;../get-things-done/&#34;&gt;《GTD 管理系统》&lt;/a&gt; 和 &lt;a href=&#34;../minimalist-lifestyle/&#34;&gt;《极简主义生活》&lt;/a&gt; 中，我们已经聊过类似的内容，然而“个人管理”终究是个没有止境的话题……&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; 这里不妨抛弃‘结构’，想到哪儿，说到哪儿……&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>嗨，PC</title>
      <link>https://loveminimal.github.io/posts/hi-pc/</link>
      <pubDate>Fri, 14 Oct 2022 16:11:58 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/hi-pc/</guid>
      <description>&lt;p&gt;近来，准备组装一台 PC 主机，做个记录 ~&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/83636026&#34;&gt;🖥 2022 年电脑配置推荐完整榜单（通用篇）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/425492516&#34;&gt;🖥 CPU篇：2023年3月台式电脑CPU一文搞定&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;说真的，采购对于‘处女座’来说真心不是一件简单的事情，很容易就会陷入到‘内耗’的境地……&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Simple Bookmark Copying</title>
      <link>https://loveminimal.github.io/posts/a-simple-bookmark-copying/</link>
      <pubDate>Fri, 30 Sep 2022 17:49:13 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/a-simple-bookmark-copying/</guid>
      <description>&lt;p&gt;感谢小伙伴 Whatacold 的创意 &lt;a href=&#34;https://whatacold.io/blog/2022-08-08-org-link-bookmarklet/&#34;&gt;A Bookmarklet for Copying a Link as an Org-mode Link - whatacold&amp;rsquo;s space - whatacold.io&lt;/a&gt; ，可以方便地复制当前页面的地址并格式化 &lt;code&gt;.md&lt;/code&gt; 链接格式，当然，也可以格式化成 &lt;code&gt;.org&lt;/code&gt; 链接格式。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>手写板</title>
      <link>https://loveminimal.github.io/posts/tablet/</link>
      <pubDate>Wed, 28 Sep 2022 16:30:52 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/tablet/</guid>
      <description>&lt;p&gt;在 &lt;a href=&#34;../canvas/&#34;&gt;Canvas&lt;/a&gt; 中，我们介绍了画布的基本概念和使用方式，现在，我们来用它实现一个基本的手写板 - 你可以在 &lt;a href=&#34;https://github.com/loveminimal/tablet&#34;&gt;Tablet&lt;/a&gt; 查看源码 。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; 原生 JS 实现一下喽 ~&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Canvas</title>
      <link>https://loveminimal.github.io/posts/canvas/</link>
      <pubDate>Fri, 23 Sep 2022 09:15:42 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/canvas/</guid>
      <description>&lt;p&gt;&lt;code&gt;&amp;gt; 近来要开发一个手写板程序，顺便来系统回顾一下 Canvas 这个东东……&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;🔔 本篇摘录自 &lt;a href=&#34;https://www.runoob.com/w3cnote/html5-canvas-intro.html&#34;&gt;《学习 HTML5 Canvas 这一篇文章就够了》&lt;/a&gt; ，写的真不错。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; 是 HTML5 新增的一个可以使用脚本（通常为 JavaScript）在其中绘制图像的 HTML 元素。&lt;/p&gt;
&lt;img alt=&#34;picture 1&#34; src=&#34;https://loveminimal.github.io/posts/canvas/imgs/1232422ad2c81ef221b8d3cf3938b9cc48fda66fdd7418d5c400728d82a2c162.png&#34; width=&#34;500&#34; /&gt;  
&lt;p&gt;&lt;code&gt;&amp;gt; 上图就是使用 canvas 绘制出来的&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Canvas 是由 HTML 代码配合高度和宽度属性而定义出的可绘制区域。JavaScript 代码可以访问该区域，类似于其他通用的二维 API，通过一套完整的绘图函数来动态生成图形。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>React</title>
      <link>https://loveminimal.github.io/posts/react/</link>
      <pubDate>Mon, 19 Sep 2022 17:30:59 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/react/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;%5Bhttps://%5D(https://react.docschina.org/docs/getting-started.html)&#34;&gt;📔 官方文档&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;具体安装及引入细节，请直接参考官方文档。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;React 是一个用于构建用户界面的 JavaScript 库，你可以用它给简单的 HTML 页面增加一点交互，也可以开始一个完全由 React 驱动的复杂应用。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; 对的，它只是一个 UI 库而已 ！！！&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>♫ 关于 Virgo 需要知道的一些事</title>
      <link>https://loveminimal.github.io/posts/about-virgo/</link>
      <pubDate>Tue, 13 Sep 2022 09:20:02 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/about-virgo/</guid>
      <description>&lt;p&gt;该主题已上传到官方主题面，跳转了解 &lt;a href=&#34;https://themes.gohugo.io/themes/hugo-theme-virgo/&#34;&gt;hugo-theme-virgo&lt;/a&gt; ，当然也可以直接访问 &lt;a href=&#34;https://github.com/loveminimal/hugo-theme-virgo&#34;&gt;Github 仓库&lt;/a&gt; 。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSCC16 - 其他 2</title>
      <link>https://loveminimal.github.io/posts/cscc/16/</link>
      <pubDate>Mon, 29 Aug 2022 17:43:34 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/16/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;好吧，内容不少，为了后续插入图片之后 ，页面太大，我们这里拆分到两个页面中。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>CSCC15 - 其他 1</title>
      <link>https://loveminimal.github.io/posts/cscc/15/</link>
      <pubDate>Fri, 26 Aug 2022 15:59:02 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/15/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;后续章节为概念性章节，统一汇总在该章节内。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>CSCC14 - 数据结构</title>
      <link>https://loveminimal.github.io/posts/cscc/14/</link>
      <pubDate>Fri, 26 Aug 2022 15:17:05 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/14/</guid>
      <description>&lt;p&gt;i.e. Data Structures&lt;/p&gt;
&lt;p&gt;上集讲了一些经典算法，比如给数组排序，找图的最短路径，而上集没讲的是 算法处理的数据  存在内存里的格式是什么。&lt;/p&gt;
&lt;p&gt;你肯定不想数据像 John Green 的大学宿舍一样乱 ，到处都是食物，衣服和纸，我们希望数据是结构化的，方便读取，因此计算机科学家发明了 &amp;ldquo;数据结构&amp;rdquo;！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSCC13 - 算法入门</title>
      <link>https://loveminimal.github.io/posts/cscc/13/</link>
      <pubDate>Fri, 26 Aug 2022 14:40:12 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/13/</guid>
      <description>&lt;p&gt;i.e. Intro to Algorithms&lt;/p&gt;
&lt;p&gt;前两集，我们&amp;quot;初尝&amp;quot;了高级编程语言（比如 Python 和 Java），我们讨论了几种语句 - 赋值语句，if 语句，循环语句，以及把代码打包成 &amp;ldquo;函数&amp;rdquo;，比如算指数。重要的是，之前写的指数函数只是无数解决方案的一种，还有其它方案 - 用不同顺序写不同语句，也能得到一样结果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不同的是&amp;quot;算法&amp;quot;，意思是：解决问题的具体步骤，即使结果一致，有些算法会更好。&lt;/strong&gt; 一般来说，所需步骤越少越好，不过有时我们也会关心其他因素，比如占多少内存。&lt;/p&gt;
&lt;p&gt;&amp;ldquo;算法&amp;rdquo; 一词来自 波斯博识者 阿尔·花拉子密， 1000 多年前的代数之父之一 ，如何想出高效算法 - 是早在计算机出现前就有的问题，诞生了专门研究计算的领域，然后发展成一门现代学科。&lt;/p&gt;
&lt;p&gt;你猜对了！计算机科学！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSCC12 - 编程原理-语句和函数</title>
      <link>https://loveminimal.github.io/posts/cscc/12/</link>
      <pubDate>Fri, 26 Aug 2022 13:51:44 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/12/</guid>
      <description>&lt;p&gt;i.e. Programming Basics - Statements &amp;amp; Functions&lt;/p&gt;
&lt;p&gt;上集讲到用机器码写程序，还要处理那么多底层细节，对写大型程序是个巨大障碍。为了脱离底层细节，开发了编程语言，让程序员专心解决问题，不用管硬件细节。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;= 底层各类太多了，编写麻烦，调试麻烦，改动麻烦……*&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>CSCC11 - 编程语言发展史</title>
      <link>https://loveminimal.github.io/posts/cscc/11/</link>
      <pubDate>Fri, 26 Aug 2022 11:46:20 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/11/</guid>
      <description>&lt;p&gt;i.e. The First Programming Languages&lt;/p&gt;
&lt;p&gt;之前我们把重点放在硬件 - 组成计算机的物理组件，比如电，电路，寄存器，RAM，ALU，CPU ，但在硬件层面编程非常麻烦。&lt;/p&gt;
&lt;p&gt;所以程序员想要一种更通用的方法编程 - 一种&amp;quot;更软的&amp;quot;媒介。&lt;/p&gt;
&lt;p&gt;没错，我们要讲软件！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSCC10 - 早期的编程方式</title>
      <link>https://loveminimal.github.io/posts/cscc/10/</link>
      <pubDate>Fri, 26 Aug 2022 11:20:51 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/10/</guid>
      <description>&lt;p&gt;i.e. Early Programming&lt;/p&gt;
&lt;p&gt;前几集我们把重点放在计算机的原理，怎么从内存读写数据，执行操作，比如把两个数字加在一起，还简单讲了下指令的执行，也就是计算机程序。&lt;/p&gt;
&lt;p&gt;但我们还没讲的是：程序如何&amp;quot;进入&amp;quot;计算机。你应该记得在第 7, 8 集，我们一步步讲了例子程序，当时为了简单，我们假设程序已经魔法般在内存里了，但事实是，程序需要加载进内存，这不是魔法，是计算机科学！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSCC09 - 高级 CPU 设计</title>
      <link>https://loveminimal.github.io/posts/cscc/09/</link>
      <pubDate>Fri, 26 Aug 2022 10:21:57 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/09/</guid>
      <description>&lt;p&gt;i.e. Advanced CPU Designs&lt;/p&gt;
&lt;p&gt;随着本系列进展，我们知道计算机进步巨大，从 1 秒 1 次运算，到现在有千赫甚至兆赫的 CPU ，你现在看视频的设备八成也有 GHz 速度 ，1 秒十亿条指令 ，这是很大的计算量！&lt;/p&gt;
&lt;p&gt;早期计算机的提速方式是减少晶体管的切换时间 ，晶体管组成了逻辑门，ALU 以及前几集的其他组件，但这种提速方法最终会碰到瓶颈，所以处理器厂商发明各种新技术来提升性能，不但让简单指令运行更快，也让它能进行更复杂的运算。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSCC08 - 指令和程序</title>
      <link>https://loveminimal.github.io/posts/cscc/08/</link>
      <pubDate>Fri, 26 Aug 2022 09:54:19 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/08/</guid>
      <description>&lt;p&gt;i.e. Instructions &amp;amp; Programs&lt;/p&gt;
&lt;p&gt;上集我们把 ALU, 控制单元，RAM, 时钟 结合在一起，做了个基本，但可用的&amp;quot;中央处理单元&amp;quot;, 简称 CPU ，它是计算机的核心。&lt;/p&gt;
&lt;p&gt;我们已经用电路做了很多组件，这次我们给 CPU 一些指令来运行！
CPU 之所以强大，是因为它是可编程的（programmable）- 如果写入不同指令，就会执行不同任务。CPU 是一块硬件，可以被软件控制！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSCC07 - 中央处理器</title>
      <link>https://loveminimal.github.io/posts/cscc/07/</link>
      <pubDate>Fri, 26 Aug 2022 09:07:05 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/07/</guid>
      <description>&lt;p&gt;i.e. The Central Processing Unit(CPU)&lt;/p&gt;
&lt;p&gt;今天我们讲 处理器（processors），提示下 - 这集可能是最难的一集，所以一旦你理解了，就会变得超厉害 der~ 😈&lt;/p&gt;
&lt;p&gt;我们已经做了一个算术逻辑单元（ALU，Arithmetic and Logic Unit），输入二进制，它会执行计算。&lt;strong&gt;我们还做了两种内存：寄存器（Registers） - 很小的一块内存，能存一个值；之后我们增大做出了 RAM ，RAM 是一大块内存，能在不同地址存大量数字。&lt;/strong&gt; 现在是时候把这些放在一起，组建计算机的 &amp;ldquo;心脏&amp;rdquo; 了，但这个 &amp;ldquo;心脏&amp;rdquo; 不会有任何包袱，比如人类情感。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;= 这一部分的描述真好，对上个章节的迷惑内容做了一个很不错的总结！*&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>CSCC06 - 寄存器 &amp; 内存</title>
      <link>https://loveminimal.github.io/posts/cscc/06/</link>
      <pubDate>Thu, 25 Aug 2022 16:55:12 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/06/</guid>
      <description>&lt;p&gt;i.e. Registers and RAM&lt;/p&gt;
&lt;p&gt;上集，我们用逻辑门做了个简单 ALU，它能执行算术 (Arithmetic) 和逻辑 (Logic) 运算 ，ALU 里的 A 和 L 因此得名。当然，算出来之后如果扔掉就没什么意义了，得找个方法存起来，可能还要进行多个连续操作，这就用到计算机内存了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;= 算出来，存起来。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你在主机上打过一场长时间的对局，或玩困难模式的 &amp;ldquo;扫雷&amp;rdquo;（Minesweeper），然后狗跑过来，被电源线绊倒，把插头拔了出来，你知道失去进度的痛苦 😈 真同情你 :(&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSCC05 - 算术逻辑单元</title>
      <link>https://loveminimal.github.io/posts/cscc/05/</link>
      <pubDate>Thu, 25 Aug 2022 16:03:25 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/05/</guid>
      <description>&lt;p&gt;i.e. How Computers Calculate-the ALU&lt;/p&gt;
&lt;p&gt;上集，我们谈了如何用二进制表示数字，比如二进制 &lt;code&gt;00101010&lt;/code&gt; 是十进制的 42，表示和存储数字是计算机的重要功能。但&lt;strong&gt;真正的目标是计算（computation）&lt;/strong&gt;，有意义的处理数字，比如把两个数字相加，这些操作由计算机的 &amp;ldquo;算术逻辑单元 （Arithmetic and Logic Unit）&amp;ldquo;处理，但大家会简称：ALU。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ALU 是计算机的数学大脑，等你理解了 ALU 的设计和功能之后，你就理解了现代计算机的基石。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ALU 就是计算机里负责运算的组件，基本其他所有部件都用到了它，先来看看这个美人。这可能是最著名的 ALU，英特尔 74181 。1970 年发布时，它是第一个封装在单个芯片内的完整 ALU ，这在当时是惊人的工程壮举。&lt;/p&gt;
&lt;img alt=&#34;picture 2&#34; src=&#34;https://loveminimal.github.io/posts/cscc/05/imgs/94bce3a3e3a075eae098b8bf3b522246e0fd78c936596fb1e2a9084e9514019b.png&#34; width=&#34;300&#34; /&gt;  
&lt;p&gt;&lt;code&gt;&amp;gt; 英特尔 74181&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;今天我们用上周学的布尔逻辑门，做一个简单的 ALU 电路，功能和 74181 一样。然后接下来几集，用它从头做出一台电脑，所以会有点复杂，但我觉得你们搞的定。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSCC04 - 二进制</title>
      <link>https://loveminimal.github.io/posts/cscc/04/</link>
      <pubDate>Thu, 25 Aug 2022 15:18:20 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/04/</guid>
      <description>&lt;p&gt;i.e. Representing Numbers and Letters with Binary&lt;/p&gt;
&lt;p&gt;今天，我们讲计算机如何存储和表示数字，所以会有一些数学，不过别担心，你们的数学水平绝对够用了。&lt;/p&gt;
&lt;p&gt;上集我们讲了，怎么用晶体管（transistors）做逻辑门（logic gates），逻辑门可以判断布尔语句，布尔代数只有两个值：&lt;code&gt;True&lt;/code&gt; 和 &lt;code&gt;False&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;但如果只有两个值，我们怎么表达更多东西 ❓ 这就需要数学了！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSCC03 - 布尔逻辑和逻辑门</title>
      <link>https://loveminimal.github.io/posts/cscc/03/</link>
      <pubDate>Wed, 17 Aug 2022 14:47:53 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/03/</guid>
      <description>&lt;p&gt;i.e. boolean-logic-and-logic-gates&lt;/p&gt;
&lt;p&gt;今天我们开始&amp;quot;抽象&amp;quot;（abstraction）的旅程！不用管底层细节，把精力用来构建更复杂的系统。&lt;/p&gt;
&lt;p&gt;上集，我们谈了计算机最早是机电设备（electromechanical），一般用十进制（decimal）计数，比如用齿轮数来代表十进制， 再到晶体管计算机。&lt;/p&gt;
&lt;p&gt;幸运的是，&lt;strong&gt;只用 &lt;code&gt;‘开/关’&lt;/code&gt; 两种状态也可以代表信息&lt;/strong&gt;，这叫&lt;code&gt;二进制&lt;/code&gt;，意思是&amp;quot;用两种状态表示&amp;quot;，就像自行车有两个轮，双足动物有两条腿。你可能觉得两种状态不多，你是对的！但如果只需要表示 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt;，两个值就够了。电路闭合，电流流过，代表 &amp;ldquo;真&amp;rdquo;；电路断开，无电流流过，代表&amp;quot;假&amp;quot;。二进制也可以写成 &lt;code&gt;1&lt;/code&gt; 和 &lt;code&gt;0&lt;/code&gt; 而不是 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt;，只是不同的表达方式罢了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSCC02 - 电子计算机</title>
      <link>https://loveminimal.github.io/posts/cscc/02/</link>
      <pubDate>Mon, 15 Aug 2022 20:09:28 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/02/</guid>
      <description>&lt;p&gt;i.e. Electronic Computing&lt;/p&gt;
&lt;p&gt;上集讲到 20 世纪初，当时的早期计算设备都针对特定用途，比如制表机（tabulating machines），大大推进了政府和企业。它们帮助，甚至代替了人工。然而人类社会的规模在以前所未有的速度增长，20 世纪上半叶，世界人口几乎翻倍。一战动员 7 千万人，二战 1 亿多人。全球贸易和运输更加紧密，工程和科学的复杂度也达到新高。我们甚至开始考虑造访其他行星，复杂度的增高导致数据量暴增，人们需要更多自动化，更强的计算能力。&lt;/p&gt;
&lt;img alt=&#34;picture 1&#34; src=&#34;https://loveminimal.github.io/posts/cscc/02/imgs/dde01eb023647fbef243f8ce436363ef4ee215027d014314260ee97fa00187fb.png&#34; width=&#34;400&#34; /&gt;  
&lt;p&gt;很快，柜子大小的计算机变成房间大小，维护费用高，而且容易出错，而正是这些机器为未来的创新打下基础。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSCC01 - 计算机早期历史</title>
      <link>https://loveminimal.github.io/posts/cscc/01/</link>
      <pubDate>Sun, 14 Aug 2022 11:27:18 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/01/</guid>
      <description>&lt;p&gt;i.e. Early Computing&lt;/p&gt;
&lt;p&gt;Hello world！我是 Carrie Anne，欢迎收看计算机科学速成课（Crash Course Computer Science）！&lt;/p&gt;
&lt;img alt=&#34;picture 2&#34; src=&#34;https://loveminimal.github.io/posts/cscc/01/imgs/8a3e8687c14cce28b9f8368ee5e06354c6ce69625c4f8167244ec40f3079f3ea.png&#34; width=&#34;400&#34; /&gt;  
&lt;p&gt;&lt;code&gt;&amp;gt; Carrie Anne 小姐姐&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在这个系列中，我们会学习 Bits（位），Bytes（字节），晶体管（transistors），逻辑门（logic gates），一直到操作系统，虚拟现实和机器人！我们要学很多东西，但预先说明，我们 &lt;strong&gt;不会&lt;/strong&gt; 教你怎么编程，我们会从高层次上纵览一系列计算机话题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>你可能需要学一些医学知识</title>
      <link>https://loveminimal.github.io/posts/learn-some-medicines/</link>
      <pubDate>Mon, 08 Aug 2022 11:45:20 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/learn-some-medicines/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;“圣人不治已病，治未病；不治已乱，治未乱。”&lt;br&gt;
&lt;code&gt;-- 《黄帝内经·素问·四气调神大论》&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;生老病死，成住坏空，古往皆如是。生命的前几十年，身体是在上升期，经得起小风小浪小消耗。然岁月不饶人，专治各种不服 …… 😅&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSCC00 - 计算机科学速成课（引言）</title>
      <link>https://loveminimal.github.io/posts/cscc/00/</link>
      <pubDate>Wed, 03 Aug 2022 17:42:14 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cscc/00/</guid>
      <description>&lt;p&gt;i.e. cs &lt;code&gt;(computer science)&lt;/code&gt; crash course&lt;/p&gt;
&lt;img alt=&#34;picture 2&#34; src=&#34;https://loveminimal.github.io/posts/cscc/00/imgs/e95986763251c49010ca90d1af26b02870c7f0070bfa57452dae28bc028f8588.png&#34; width=&#34;&#34; /&gt;  
&lt;p&gt;这个系列来自于 &lt;a href=&#34;https://thecrashcourse.com/&#34;&gt;CRASH COURSE&lt;/a&gt; 的一个视频系列课程（共有 40 课程，每个课程 10 分钟左右），多谢热心的 CRASH COURSE 字幕组配上了优质的字幕 - &lt;a href=&#34;https://www.bilibili.com/video/BV1EW411u7th?p=1&amp;amp;vd_source=a6f6452712ce1cd91d115827d0148715&#34;&gt; B 站地址 📺&lt;/a&gt; 。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CPU 缓存是什么</title>
      <link>https://loveminimal.github.io/posts/cpu-cache/</link>
      <pubDate>Tue, 02 Aug 2022 11:30:24 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cpu-cache/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;转载自 &lt;a href=&#34;https://www.jb51.net/hardware/cpu/610074.html&#34;&gt;https://www.jb51.net/hardware/cpu/610074.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们知道，CPU 性能是主要由 CPU 构架、核心线程数量、主频、缓存等诸多因素共同决定，而“缓存”是很多网友容易忽视的一个地方。那么，CPU 缓存是什么？在电脑 CPU 中，一二三级缓存究竟谁对 CPU 性能影响最重要呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用沙子造的 CPU 凭什么卖的那么贵</title>
      <link>https://loveminimal.github.io/posts/expensive-cpu/</link>
      <pubDate>Tue, 02 Aug 2022 10:57:48 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/expensive-cpu/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;转载自 &lt;a href=&#34;https://www.jb51.net/hardware/cpu/610350.html&#34;&gt;https://www.jb51.net/hardware/cpu/610350.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2018 年 4 月 3 日，Intel 在北京举办了第八代酷睿移动处理器全球发布会，正式发布了全新的第八代酷睿移动处理器。很多小伙伴其实对 intel 的芯片很感兴趣，但是一但深入了解，很快就会被扑面而来的晶体管，微架构，纳米，CPI，睿频，超频，缓存等概念搞疯………&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CPU 是如何制造出来的</title>
      <link>https://loveminimal.github.io/posts/how-to-make-a-cpu/</link>
      <pubDate>Mon, 01 Aug 2022 17:03:52 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/how-to-make-a-cpu/</guid>
      <description>&lt;p&gt;好吧，试了，但真的没找到 “佚名” 是谁 😂 ，希望原作者能感受到我的原力感谢吧…… 不少网站都有转载该篇文章，以下是图片较清晰的几个页面链接。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sohu.com/a/255397866_468626&#34;&gt;https://www.sohu.com/a/255397866_468626&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jb51.net/hardware/cpu/611229.html&#34;&gt;https://www.jb51.net/hardware/cpu/611229.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jb51.net/hardware/cpu/610350.html&#34;&gt;https://www.jb51.net/hardware/cpu/610350.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;1 寸 = 33.3333 mm&lt;/code&gt;
&lt;code&gt;集成电路 ic (integrated circuit )&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>保护好你的手</title>
      <link>https://loveminimal.github.io/posts/protect-your-hands/</link>
      <pubDate>Mon, 01 Aug 2022 14:24:20 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/protect-your-hands/</guid>
      <description>&lt;p&gt;约两个月前，午休后的一个小意外不小心拉伤了右手姆指，当时也没有太注意，想着过几天就好了。俗话说，“伤筋动骨一百天嘛”。一周又一周，情况并没有得到好转。正好周末安排了体检，就顺带就诊一下。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为什么拖了那么久？一是不在意，二是天太热、人太懒。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>冴羽写博客之深入系列</title>
      <link>https://loveminimal.github.io/posts/deep-js/</link>
      <pubDate>Mon, 25 Jul 2022 14:03:39 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/deep-js/</guid>
      <description>&lt;p&gt;🔔 摘录自 &lt;a href=&#34;https://github.com/mqyqingfeng/Blog&#34;&gt;冴羽写博客之深入系列&lt;/a&gt; ，写的很不错。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>跑步</title>
      <link>https://loveminimal.github.io/posts/running/</link>
      <pubDate>Fri, 22 Jul 2022 16:45:07 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/running/</guid>
      <description>&lt;p&gt;健身训练的项目有很多，而有一些运动是大多数人所热爱的。跑步 🏃 就是一项大众所熟悉的，门槛比较低的运动项目，无论男女老少都可以跑起来。&lt;/p&gt;
&lt;p&gt;那么，每天坚持跑步，身材可以瘦下来吗？可以 ❗ 跑步的可以实现的目标很多，想要达到减肥的目的，需要注意以下一些方面。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>防抖与节流</title>
      <link>https://loveminimal.github.io/posts/debounce-and-throttle/</link>
      <pubDate>Thu, 21 Jul 2022 14:13:29 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/debounce-and-throttle/</guid>
      <description>&lt;p&gt;为什么需要防抖和节流？它们是什么？有什么区别？适用场景是什么？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>极简主义生活</title>
      <link>https://loveminimal.github.io/posts/minimalist-lifestyle/</link>
      <pubDate>Wed, 20 Jul 2022 16:23:12 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/minimalist-lifestyle/</guid>
      <description>&lt;p&gt;我理解中的极简主义，核心“断、舍、离”，理念“少即是多”，重点“有序”。&lt;/p&gt;
&lt;p&gt;极简主义是一种生活和思考模式，实现它的方式有很多， &lt;a href=&#34;../get-things-done/&#34;&gt;GTD&lt;/a&gt; 是其中一种，也是目前我感觉比较好的一种。它很有趣，但并不容易坚持，毕竟形成一种全新的生活习惯是一个长期的过程。开始很容易，难在持续。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nginx 重定向</title>
      <link>https://loveminimal.github.io/posts/nginx-rewrite/</link>
      <pubDate>Sat, 16 Jul 2022 18:34:43 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/nginx-rewrite/</guid>
      <description>&lt;p&gt;博客系统迁移好多次了，多少次？详见 &lt;a href=&#34;../a-theme-making-journey&#34;&gt;一场“疲惫”的主题制作之旅&lt;/a&gt; 。域名啊、博客文章的层级结构啊，都难免存在差异。这就导致了一个问题，之前在别的网站发布的一些页面链接就成了“死链”。虽然，可以简单地重写向到 404 ，体验却不好，最好是可以重定向到变化后的页面。&lt;/p&gt;
&lt;p&gt;周末无聊，简单实现了一下，做个记录。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>进制及转换</title>
      <link>https://loveminimal.github.io/posts/base-and-conversion/</link>
      <pubDate>Fri, 15 Jul 2022 09:10:22 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/base-and-conversion/</guid>
      <description>&lt;p&gt;👉 推荐一个不错的网站 - &lt;a href=&#34;http://c.biancheng.net/&#34;&gt;C 语言中文网&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>字符集和字符编码</title>
      <link>https://loveminimal.github.io/posts/charset-and-character-encoding/</link>
      <pubDate>Thu, 14 Jul 2022 16:11:36 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/charset-and-character-encoding/</guid>
      <description>&lt;p&gt;字符是什么？字母、汉字、标点符号、控制字符、假名……&lt;/p&gt;
&lt;p&gt;计算机中储存的信息都是二进制数表示的，我们在屏幕上看到的英文、汉字等字符都是二进制转换之后的结果。按照何种规则将字符存储在计算机中，如 &lt;code&gt;a&lt;/code&gt; 用什么表示，称为“编码”；反之，将存储在计算机中的二进制数解析显示出来，称为“解码”。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;= 可以这样说，人类可读的即为“解”，计算机可读的即为“编”。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Json Web Tokens</title>
      <link>https://loveminimal.github.io/posts/json-web-tokens/</link>
      <pubDate>Thu, 14 Jul 2022 15:44:16 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/json-web-tokens/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://jwt.io/&#34;&gt;https://jwt.io/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VSCode 插件 CVE Keymap 的开发记录</title>
      <link>https://loveminimal.github.io/posts/cve-keymap/</link>
      <pubDate>Wed, 06 Jul 2022 15:36:10 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cve-keymap/</guid>
      <description>&lt;p&gt;
&lt;strong&gt;当前博文以 &lt;code class=&#34;verbatim&#34;&gt;Org Mode&lt;/code&gt; 格式编辑。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I have a vim, I have a emacs.&lt;br&gt;
Eh~ vim-emacs!&lt;br&gt;
I have a code, I have a vim-emacs.&lt;br&gt;
Eh~ code-vim-emacs!&lt;br&gt;
CVE!&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>键位映射那些事儿</title>
      <link>https://loveminimal.github.io/posts/editor-keybindings/</link>
      <pubDate>Tue, 05 Jul 2022 17:53:29 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/editor-keybindings/</guid>
      <description>&lt;p&gt;Vim 的键位不错，无论是移动光标还是进行编辑操作，但是如果是使用中文输入的话，就很尬 &amp;ndash; 中文状态下命令模式不能用，虽然通过一些方式可以使得在切换为非插入模式时自动切换为英文状态，但总是不那么尽如人意。&lt;/p&gt;
&lt;p&gt;Emacs 的键位模式，就很适应中英文的混合输入，唯一的缺点就是有点费小手指。在 Emacs 中，我一般会启用 Evil 插件，如此，可以实现如果是只读文件和做一些删减工作的时候，就直接使用 Vim 的键位模式，而在插入模式下，就使用 Emacs 的键位模式，很不错，附上一份个人的 Evil 插件的配置 &lt;a href=&#34;https://github.com/loveminimal/emacs.d/blob/master/lisp/init-evil.el&#34;&gt;init-evil.el&lt;/a&gt; 。唯一不足的是，这种方式只有在 Emacs 中才是可用的，如果你使用其他编辑器时，就没有这份待遇了。不过，单纯的 Emacs 键位也足够好用了。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>注解</title>
      <link>https://loveminimal.github.io/posts/annotation/</link>
      <pubDate>Tue, 05 Jul 2022 10:00:17 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/annotation/</guid>
      <description>&lt;p&gt;🔔 以下内容主要摘录自 &lt;a href=&#34;https://www.liaoxuefeng.com/wiki/1252599548343744/1255945389098144&#34;&gt;廖雪峰老师的博客&lt;/a&gt;，具体示例请跳到原文参考。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spring Boot</title>
      <link>https://loveminimal.github.io/posts/spring-boot/</link>
      <pubDate>Mon, 04 Jul 2022 15:26:05 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/spring-boot/</guid>
      <description>&lt;p&gt;🔔 相关内容请参阅 &lt;a href=&#34;https://www.liaoxuefeng.com/wiki/1252599548343744/1266265175882464&#34;&gt;https://www.liaoxuefeng.com/wiki/1252599548343744/1266265175882464&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spring Boot 是什么？它是一个基于 &lt;a href=&#34;../spring/&#34;&gt;Spring&lt;/a&gt; 的套件，它帮助我们预组装了一系列组件，以便以尽可能少的代码和配置来开发基于 Spring 的 Java 应用程序。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Spring Boot makes it easy to create stand-alone, production-grade Spring based Applications that you can &amp;ldquo;just run&amp;rdquo;.&lt;br&gt;
We take an opinionated view of the Spring platform and third-party libraries so you can get started with minimum fuss. Most Spring Boot applications need minimal Spring configuration.&lt;br&gt;
&amp;ndash; &lt;a href=&#34;https://spring.io/projects/spring-boot&#34;&gt;Spring Boot&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 Spring 中，我们使用 &lt;code&gt;xml&lt;/code&gt; 文件或是注解来告诉 Spring 如果处理我们的组件。但是你必需给它明确的指令，它才知道如何正确的执行。随着组件数量的增多，配置项变得越来越长，以至于难以维护。所以，有必要让框架为我们做更多的事儿，比如解决依赖的依赖等问题，这就是为什么我们需要 Spring Boot。&lt;/p&gt;
&lt;p&gt;Spring Boot 是如何做到这些的呢？下面让我们来慢慢揭开这位“俏姑娘”的面纱 🥰。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Vim</title>
      <link>https://loveminimal.github.io/posts/vim/</link>
      <pubDate>Mon, 04 Jul 2022 09:58:24 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/vim/</guid>
      <description>&lt;p&gt;Vim 是 Vi 的升级版，一款功能强大、高度可定制的文本编辑器，它只有一个对手 &amp;ndash; Emacs 。那么，它来自哪里？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一场“疲惫”的主题制作之旅</title>
      <link>https://loveminimal.github.io/posts/a-theme-making-journey/</link>
      <pubDate>Sat, 02 Jul 2022 16:49:28 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/a-theme-making-journey/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;哎，这让人费解的强迫症……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;博客没写几篇，博客系统倒是折腾了不少，哎，有点本末倒置了，希望这次是最后一次啦（不可能的），单开一篇碎碎念一下前前后后的那些事儿。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Org Mode</title>
      <link>https://loveminimal.github.io/posts/org-mode/</link>
      <pubDate>Wed, 29 Jun 2022 10:02:15 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/org-mode/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;这里是 Hugo 解析 Org Mode 内容的展示，如果你使用的是 Markdown ，可以跳转 &lt;a href=&#34;https://loveminimal.github.io/posts/markdown&#34;&gt;Markdown&lt;/a&gt; 查看相关样式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;
*想要了解更多，可以去阅读 &lt;a href=&#34;https://ox-hugo.scripter.co/&#34;&gt;oxhugo&lt;/a&gt; 的文档 。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Markdown</title>
      <link>https://loveminimal.github.io/posts/markdown/</link>
      <pubDate>Wed, 29 Jun 2022 09:18:49 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/markdown/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;这里是 Hugo 解析 Markdown 内容的展示，如果你使用的是 Org Mode ，可以跳转 &lt;a href=&#34;https://loveminimal.github.io/posts/org-mode&#34;&gt;Org Mode&lt;/a&gt; 查看相关样式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;以下 markdown 正文内容，摘自 &lt;a href=&#34;https://github.com/hexojs/hexo-theme-unit-test/edit/master/source/_posts/markdown.md&#34;&gt;Markdown 测试文本&lt;/a&gt; ，并添加、修改了一些章节。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This post is originated from &lt;a href=&#34;https://gist.github.com/apackeer/4159268&#34;&gt;here&lt;/a&gt; and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>一种简单的 Hugo 本地搜索实现</title>
      <link>https://loveminimal.github.io/posts/hugo-local-search/</link>
      <pubDate>Thu, 23 Jun 2022 15:43:26 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/hugo-local-search/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;🚨 后又陆陆续续加了些辅助功能，可以点击下载最新完整的&lt;a href=&#34;https://ovirgo.com/js/search.js&#34;&gt;search.js&lt;/a&gt; 源码（另存后使用编辑器打开就不中文乱码了）。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Go</title>
      <link>https://loveminimal.github.io/posts/go/</link>
      <pubDate>Wed, 08 Jun 2022 18:02:51 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/go/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Go 之 1、2、3、4、5…… 不得不说，Golang 的语法真的挺怪异的 😢&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&#34;https://loveminimal.github.io/posts/go/imgs/2.webp&#34; width=&#34;320&#34; /&gt;</description>
    </item>
    
    <item>
      <title>正则表达式</title>
      <link>https://loveminimal.github.io/posts/regexp/</link>
      <pubDate>Tue, 24 May 2022 17:55:59 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/regexp/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;很强大，也让人很头大…… 这只是一个精简的摘要，相信我，即使总结的再全面，一段时间之后，也需要借助参考手册，才能正确的使用它。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>GTD 管理系统</title>
      <link>https://loveminimal.github.io/posts/get-things-done/</link>
      <pubDate>Sun, 01 May 2022 18:05:46 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/get-things-done/</guid>
      <description>&lt;img src=&#34;https://loveminimal.github.io/posts/get-things-done/imgs/gtd-1.jpg&#34; width=&#34;800&#34; style=&#34;border-radius: 6px;&#34; /&gt;
&lt;p&gt;GTD 分为 &lt;em&gt;=横向管理&lt;/em&gt; 和 &lt;em&gt;=纵向管理&lt;/em&gt; 两个方面。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;= 横向管理，其实就是事物在时空层面上的大搜集；纵向管理，则是事物在某一时空节点上的纵深。 &lt;strong&gt;横向收集，纵向执行！&lt;/strong&gt; 纵向管理偏重在横向管理的行动阶段！*&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>C</title>
      <link>https://loveminimal.github.io/posts/c/</link>
      <pubDate>Tue, 01 Mar 2022 17:31:45 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/c/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;= 好的吧，我承认，对于 C 语言，我有一种莫名其妙的偏爱！是因为可以直接操作内存吗？或许是！可能吧，计算机有什么神奇的东西呢？最终就是围绕那几个概念在来回打转！&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Promise</title>
      <link>https://loveminimal.github.io/posts/promise/</link>
      <pubDate>Tue, 08 Feb 2022 17:18:18 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/promise/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;= 这篇 Promise 仅是摘录使用，内容很散碎……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise&#34;&gt;Promise&lt;/a&gt; 是一个对象（可以用来绑定回调函数），它代表了一个异步操作的最终完成或者失败。因为大多数人仅仅是使用已创建的 Promise 实例对象，所以我们首先说明怎样使用 Promise，再说明如何创建 Promise 。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MVX</title>
      <link>https://loveminimal.github.io/posts/mvx/</link>
      <pubDate>Mon, 07 Feb 2022 17:05:10 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/mvx/</guid>
      <description>&lt;p&gt;MVVM ? MVC ? MVP ?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Web 开发</title>
      <link>https://loveminimal.github.io/posts/web-dev/</link>
      <pubDate>Wed, 26 Jan 2022 11:09:37 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/web-dev/</guid>
      <description>&lt;p&gt;开个坑，大点的……&lt;/p&gt;
&lt;p&gt;🔔 摘录自 &lt;a href=&#34;https://www.liaoxuefeng.com/wiki/1252599548343744/1255945497738400&#34;&gt;廖雪峰老师的 Java 教程&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spring</title>
      <link>https://loveminimal.github.io/posts/spring/</link>
      <pubDate>Wed, 19 Jan 2022 16:51:02 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/spring/</guid>
      <description>&lt;p&gt;🔔 摘录自 &lt;a href=&#34;http://c.biancheng.net/spring/&#34;&gt;http://c.biancheng.net/spring/&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;虽然我们在生产环境中基本上使用 &lt;a href=&#34;../spring-boot/&#34;&gt;Spring Boot&lt;/a&gt; 了，但是深入了解 Spring 是非常必要的，因为它是“地基”。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>SQL</title>
      <link>https://loveminimal.github.io/posts/sql/</link>
      <pubDate>Mon, 17 Jan 2022 16:08:20 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/sql/</guid>
      <description>&lt;p&gt;🔔 摘录自 &lt;a href=&#34;https://www.liaoxuefeng.com/wiki/1177760294764384&#34;&gt;廖雪峰老师的 SQL 教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;SQL，结构化查询语言（Structured Query Language ），是一种数据库查询和程序设计语言，用于访问和操作数据库系统。SQL 语句既可以查询数据库中的数据，也可以插入、更新和删除数据库中的数据，还可以对数据库进行管理和维护操作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;= 数据库能听懂的语言 &amp;ndash; SQL*&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>反射与泛型</title>
      <link>https://loveminimal.github.io/posts/reflection-and-generic/</link>
      <pubDate>Thu, 02 Dec 2021 15:58:27 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/reflection-and-generic/</guid>
      <description>&lt;p&gt;i.e.Reflection And Generic&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>道述</title>
      <link>https://loveminimal.github.io/posts/dao/</link>
      <pubDate>Fri, 05 Nov 2021 20:59:26 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/dao/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;“道可道，非常道。名可名，非常名。”&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>马克思主义简览</title>
      <link>https://loveminimal.github.io/posts/marxism-lite/</link>
      <pubDate>Mon, 16 Aug 2021 09:01:46 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/marxism-lite/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;认识世界，改造世界。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Teach Yourself Computer Science</title>
      <link>https://loveminimal.github.io/posts/teach-yourself-computer-science/</link>
      <pubDate>Wed, 28 Jul 2021 18:36:35 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/teach-yourself-computer-science/</guid>
      <description>&lt;p&gt;i.e. 自学计算机科学&lt;/p&gt;
&lt;p&gt;🔔 转载 &lt;a href=&#34;https://teachyourselfcs.com/&#34;&gt;英文原文&lt;/a&gt;、&lt;a href=&#34;https://github.com/keithnull/TeachYourselfCS-CN/blob/master/TeachYourselfCS-CN.md&#34;&gt;中文译本&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无意中看到这篇文章，感觉挺不错的，转载一下，方便摘录！&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>浏览器</title>
      <link>https://loveminimal.github.io/posts/browser/</link>
      <pubDate>Wed, 21 Jul 2021 15:28:58 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/browser/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;了解浏览器，它已经成为主流的信息传递方式，并将持续壮大！&lt;br&gt;
了解它的内核、构成及动作方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;img src=&#34;https://loveminimal.github.io/posts/browser/imgs/tim.jpg&#34; width=&#34;300&#34; alt=&#34;蒂姆·伯纳斯·李&#34; /&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; 蒂姆·伯纳斯·李 （1955.06.08 - ）&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2017 年，他因 “发明万维网、第一个浏览器和使万维网得以扩展的基本协议和算法” 而获得 2016 年度的图灵奖。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://loveminimal.github.io/posts/git/</link>
      <pubDate>Wed, 21 Jul 2021 15:22:00 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/git/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;不可或缺的工具！！！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文旨在记录个人使用过程中遇到的相关 Git 命令，非教程式的，详细学习请参阅 &lt;a href=&#34;https://git-scm.com/book/zh/v2&#34;&gt;《Pro Git》 的中文文档&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>中文技术文档</title>
      <link>https://loveminimal.github.io/posts/zh-tech-doc/</link>
      <pubDate>Mon, 19 Jul 2021 15:18:02 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/zh-tech-doc/</guid>
      <description>&lt;p&gt;🔔 参考 &lt;a href=&#34;https://www.ruanyifeng.com/blog/2016/10/document_style_guide.html&#34;&gt;中文技术文档的写作规范&lt;/a&gt; ，及个人写作习惯。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Scroll Bar</title>
      <link>https://loveminimal.github.io/posts/scroll-bar/</link>
      <pubDate>Tue, 09 Mar 2021 11:06:13 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/scroll-bar/</guid>
      <description>&lt;p&gt;🔔 参考 &lt;a href=&#34;https://www.cnblogs.com/wjw1014/p/13564175.html&#34;&gt;https://www.cnblogs.com/wjw1014/p/13564175.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>当然我在扯淡</title>
      <link>https://loveminimal.github.io/posts/yinwang/</link>
      <pubDate>Wed, 03 Mar 2021 11:24:04 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/yinwang/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;我并不喜欢王垠这个人，甚至有些反感，但他的某些博文我很喜欢，也因此而受益，Hmm&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;*Tip. 非原文摘录，各别语句进行了删减和改动，建议看原文（点击章节标题）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>模块化编程</title>
      <link>https://loveminimal.github.io/posts/modular-programming/</link>
      <pubDate>Fri, 11 Dec 2020 10:52:19 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/modular-programming/</guid>
      <description>&lt;p&gt;i.e. Modular Programming&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;每一个领域的内容，都要有先问一下 &amp;ndash; 是什么？为什么？做什么？怎么做？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;是什么？简述概念；&lt;/li&gt;
&lt;li&gt;为什么？历史发展，出现的原因，优缺点；&lt;/li&gt;
&lt;li&gt;做什么？主要应用场景；&lt;/li&gt;
&lt;li&gt;怎么做？具体使用方法步骤。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Virtual Dom</title>
      <link>https://loveminimal.github.io/posts/virtual-dom/</link>
      <pubDate>Wed, 02 Dec 2020 10:33:28 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/virtual-dom/</guid>
      <description>&lt;p&gt;Before learning Virtual DOM, lets take a look at DOM.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>打造 SDK</title>
      <link>https://loveminimal.github.io/posts/sdk/</link>
      <pubDate>Tue, 01 Dec 2020 15:09:04 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/sdk/</guid>
      <description>&lt;p&gt;🔔 转载自 &lt;a href=&#34;https://zhuanlan.zhihu.com/p/272614462&#34;&gt;如何打造一款标准的 JS-SDK&lt;/a&gt;&lt;/p&gt;
&lt;img src=&#34;https://loveminimal.github.io/posts/sdk/imgs/sdk-1.jpg&#34; width=&#34;400&#34; style=&#34;float: right; margin-left: 16px;&#34; /&gt;
&lt;p&gt;SDK（Software Development Kit，软件开发工具包），一般都是一些软件工程师为特定的软件包、软件框架、硬件平台、操作系统等建立应用软件的开发工具的集合。简单讲， &lt;strong&gt;面向开发者，针对特定领域的软件包&lt;/strong&gt; ，基于它，开发人员可以快速构建自己的应用 App 。&lt;/p&gt;
&lt;p&gt;*&lt;strong&gt;注：比较规范的 SDK 一般都会包含若干的 API 、开发工具集和说明文档。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ajax</title>
      <link>https://loveminimal.github.io/posts/ajax/</link>
      <pubDate>Thu, 26 Nov 2020 09:58:54 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/ajax/</guid>
      <description>&lt;p&gt;什么是 Ajax ?&lt;/p&gt;
&lt;img src=&#34;https://loveminimal.github.io/posts/ajax/imgs/ajax-1.png&#34; width=&#34;600&#34; /&gt;
&lt;p&gt;AJAX（Asynchronous JavaScript and XML），是一种异步请求数据的 Web 开发技术。它不是新的编程语言，而是一种使用现有标准的新方法。其最大的优点是在不重新加载整个页面的情况下，可以与服务器交换数据并更新部分网页内容。&lt;/p&gt;
&lt;p&gt;*注：AJAX 不需要任何浏览器插件，但需要用户允许 JavaScript 在浏览器上执行。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>File Conversion</title>
      <link>https://loveminimal.github.io/posts/file-conversion/</link>
      <pubDate>Thu, 26 Nov 2020 09:40:28 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/file-conversion/</guid>
      <description>&lt;p&gt;JavaScript 中的 file、blob 和 base64 。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Drag and Drop</title>
      <link>https://loveminimal.github.io/posts/drag-and-drop/</link>
      <pubDate>Tue, 10 Nov 2020 09:33:57 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/drag-and-drop/</guid>
      <description>&lt;p&gt;&lt;em&gt;拖放&lt;/em&gt; 是一种常见的特性，即抓取对象以后拖到另一个位置。在 HTML5 中，拖放是标准的一部分，任何元素都能够拖放。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;*注：Internet Explorer 9+, Firefox, Opera, Chrome, 和 Safari 支持拖动。&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>跨域</title>
      <link>https://loveminimal.github.io/posts/cross-domain/</link>
      <pubDate>Tue, 03 Nov 2020 09:15:07 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/cross-domain/</guid>
      <description>&lt;p&gt;🔔 本文摘录自 &lt;a href=&#34;http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html&#34;&gt;浏览器同源政策及其规避方法&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>五笔那些事儿</title>
      <link>https://loveminimal.github.io/posts/wubi/</link>
      <pubDate>Mon, 02 Nov 2020 14:56:30 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/wubi/</guid>
      <description>&lt;p&gt;🔔 本文主要摘录自 &lt;a href=&#34;http://www.wubizi.net/xuewubi/&#34;&gt;问问学五笔&lt;/a&gt;&lt;a href=&#34;http://www.wubizi.net/xuewubi/&#34;&gt;1&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nginx</title>
      <link>https://loveminimal.github.io/posts/nginx/</link>
      <pubDate>Fri, 23 Oct 2020 14:09:07 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/nginx/</guid>
      <description>&lt;p&gt;在认识、学习 Nginx 之前，我们先来看一下代理是什么，如果你已经非常熟悉代理，可以直接跳到第二个章节。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CSS 中的动效</title>
      <link>https://loveminimal.github.io/posts/css-tta/</link>
      <pubDate>Mon, 19 Oct 2020 10:47:01 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/css-tta/</guid>
      <description>&lt;p&gt;CSS 中的 &lt;code&gt;transform、transition&lt;/code&gt; 和 &lt;code&gt;animation&lt;/code&gt; ，简称 TTA。&lt;/p&gt;
&lt;div class=&#34;oh-essay&#34;&gt;
CSS 什么的这种逻辑性略弱、规则性很强的领域，边用边深入就好，不常用的记了也会忘。
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Work</title>
      <link>https://loveminimal.github.io/posts/work/</link>
      <pubDate>Tue, 29 Sep 2020 12:10:47 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/work/</guid>
      <description>&lt;p&gt;开发环境 Jenkins 的 Git Branches 和项目名称对照表及其说明和备忘。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>简谱</title>
      <link>https://loveminimal.github.io/posts/nmn/</link>
      <pubDate>Tue, 08 Sep 2020 20:35:51 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/nmn/</guid>
      <description>&lt;p&gt;i.e. NMN、Numbered Musical Notation&lt;/p&gt;
&lt;p&gt;&lt;em&gt;_简谱&lt;/em&gt; &lt;a href=&#34;https://baike.baidu.com/item/%E7%AE%80%E8%B0%B1&#34;&gt;2&lt;/a&gt; 是指一种简易的记谱法，在字母简谱和数字简谱两种。其起源于 18 世纪的法国，后经德国人改良，遂成今日之貌。一般所称的简谱，系指数字简谱。&lt;/p&gt;
&lt;p&gt;数字简谱以可动唱名法为基础，用 &lt;code&gt;1、2、3、4、5、6、7&lt;/code&gt; 代表音阶中的 7 个基本级，读音为 &lt;code&gt;do、re、mi、fa、sol、la、si&lt;/code&gt; ，英文由 &lt;code&gt;C、D、E、F、G、A、B&lt;/code&gt; 表示，休止以 &lt;code&gt;0&lt;/code&gt; 表示。每一个数字的时值相当于五线谱的 4 分音符。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>饮食调整</title>
      <link>https://loveminimal.github.io/posts/diet-modification/</link>
      <pubDate>Mon, 31 Aug 2020 20:52:45 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/diet-modification/</guid>
      <description>&lt;div class=&#34;oh-essay&#34;&gt;
饮食调整，贵在平衡。保证必需营养吸收，减少不必要的食物摄入。
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>源码编译安装</title>
      <link>https://loveminimal.github.io/posts/source-code-compile/</link>
      <pubDate>Wed, 13 May 2020 13:54:02 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/source-code-compile/</guid>
      <description>&lt;p&gt;Linux 下源代码的编译安装，及其编译过程和可能遇到的问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Manjaro Linux</title>
      <link>https://loveminimal.github.io/posts/manjaro-linux/</link>
      <pubDate>Wed, 06 May 2020 12:06:13 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/manjaro-linux/</guid>
      <description></description>
    </item>
    
    <item>
      <title>道德经</title>
      <link>https://loveminimal.github.io/posts/lao-zi/</link>
      <pubDate>Tue, 17 Mar 2020 21:19:53 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/lao-zi/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;道法自然！&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>十分钟掌握 TMUX</title>
      <link>https://loveminimal.github.io/posts/tmux/</link>
      <pubDate>Wed, 26 Feb 2020 11:33:29 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/tmux/</guid>
      <description>&lt;img src=&#34;https://www.wangbase.com/blogimg/asset/201910/bg2019102005.png&#34; width=&#34;300&#34; /&gt;
&lt;p&gt;🔔 &lt;a href=&#34;%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5&#34;&gt;http://www.ruanyifeng.com/blog/2019/10/tmux.html&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;oh-essay&#34;&gt;
Windows 终于有了个 Windows-Terminal 吧，配置文件还是个 txt .... 哎，微软啊，你妹。
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Wiki</title>
      <link>https://loveminimal.github.io/posts/wiki/</link>
      <pubDate>Tue, 28 Jan 2020 12:26:30 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/wiki/</guid>
      <description>&lt;img alt=&#34;picture 8&#34; src=&#34;https://loveminimal.github.io/posts/wiki/imgs/1912db1b19fa392956a9d4c48a0c6354b8549ccf469303b891ec1a2a462d8fc2.png&#34; /&gt;</description>
    </item>
    
    <item>
      <title>易经</title>
      <link>https://loveminimal.github.io/posts/yi-jing/</link>
      <pubDate>Sat, 04 Jan 2020 21:10:35 +0800</pubDate>
      
      <guid>https://loveminimal.github.io/posts/yi-jing/</guid>
      <description>&lt;p&gt;🔔 文中内容，多数摘录自南怀瑾先生的《易经杂说》。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;书不尽言，言不尽意。自觉圣智，完成人格。 &amp;ndash; 南怀瑾&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
  </channel>
</rss>
